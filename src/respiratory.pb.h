/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_RESPIRATORY_PB_H_INCLUDED
#define PB_RESPIRATORY_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _adcResults {
    int32_t resp[5];
} adcResults;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define adcResults_init_default                  {{0, 0, 0, 0, 0}}
#define adcResults_init_zero                     {{0, 0, 0, 0, 0}}

/* Field tags (for use in manual encoding/decoding) */
#define adcResults_resp_tag                      1

/* Struct field encoding specification for nanopb */
#define adcResults_FIELDLIST(X, a) \
X(a, STATIC,   FIXARRAY, INT32,    resp,              1)
#define adcResults_CALLBACK NULL
#define adcResults_DEFAULT NULL

extern const pb_msgdesc_t adcResults_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define adcResults_fields &adcResults_msg

/* Maximum encoded size of messages (where known) */
#define RESPIRATORY_PB_H_MAX_SIZE                adcResults_size
#define adcResults_size                          55

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
